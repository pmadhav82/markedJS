<div class="container">
  <div class="row">
    <div class="col-md-8">
      <h3>Comments</h3>
      <hr>
      <div class="comments">

      </div>
    
      <form id="my-comment-form" >
        <h4>    <img src="https://placehold.it/64x64" alt="user avatar" class="mr-3 mt-1 rounded-circle">
         Leave a Comment:</h4>
    
        <div class="form-group">
          <label for="comment">Comment:</label>
          <textarea name="comment" id="comment" rows="5" class="form-control" > </textarea>
        </div>
        <p id="error-message" class="danger"></p>
        <button type="submit" id="submitBtn" class="btn btn-primary m-1">Submit</button>
      </form>

    </div>

  </div>

</div>

<script>

const BASE_URL = `${location.origin}/comment`
const commentForm = document.getElementById("my-comment-form")
const errorMessage = document.getElementById("error-message")
const URL = location.href;
const postId = URL.split("/")[4];
const commentsDiv = document.querySelector(".comments")







const fetchComments = async ()=>{
  let html = document.createElement("div")
html.className = "d-flex flex-column-reverse"

 const renderComment = (comment)=>{
let div = document.createElement("div")


  div.innerHTML  +=  `
  
  <div class="card m-1">
  <div class="card-header">
  Posted on ${new Date(comment.createdAt).toLocaleString("en-US",{
    "weekday":"long",
    "year":"numeric",
    "day":"numeric"
  })}

   <button class = "btn btn-primary delete-comment" value = ${comment._id}> Delete </button>

  </div>
  <div class="card-body">
    
    <p class="card-text"> ${comment.text}</p>

<div class="input-group">
<form class = "w-50" id = ${comment._id}>
  
  <input type="text" class="form-control " placeholder=" Add reply" name = "reply" aria-describedby="basic-addon2">
   </form>

   <div class="btn-group">
    <button class = "btn btn-success reply-btn" value = ${comment._id} > Reply </button>

   

  </div>
</div>
  </div>
</div>


  `
 if(comment.replies && comment.replies.length > 0){
    comment.replies.forEach((reply)=>{
     div.style.marginLeft = "-20px"
    
      renderComment(reply)
     
      
    })
  } 
  
  
  html.appendChild(div)
  }



 

try{
  const res = await fetch(`${BASE_URL}?postId=${postId}`)
  const comments = await res.json()
  console.log(comments)
  if(res){
    
comments.forEach((comment)=>{

   renderComment(comment)

})


commentsDiv.appendChild(html)
  }

}catch(er){
  console.log(er.message)
}







// add reply
const replyBtns = document.querySelectorAll(".reply-btn");

const replyHandeler = async (parentId, text)=>{
try{
  const res = await fetch(`${BASE_URL}/reply`,{
    headers:{
      "ACCEPT":"Application/json",
"Content-Type":"Application/json"

    },
    method:"POST",
    body: JSON.stringify({reply:text,postId,parentId})
  })

const data = await res.json()
console.log(data)
if(res.ok){
  location.reload()
}
}catch(er){
  console.log(er.message)
}

}


replyBtns.forEach((btn)=>{
   btn.addEventListener("click",()=>{
    let replyForm = document.getElementById(btn.value);
    let formData = new FormData(replyForm)
    let reply = formData.get("reply").trim()
    if(reply.length>0){

    replyHandeler(btn.value,reply)

    }
replyForm.reset()
   })
})


// delete comment

const deleteComment = async (id, url)=>{
try{
const res = await fetch(url,{
  headers:{
"ACCEPT":"Application/json",
"Content-Type":"Application/json"
  },
  method:"DELETE",
  body:JSON.stringify({commentId:id})
})
console.log(await res.json())

if(res.ok){

  location.reload()
}

}
 catch(er){
  console.log(er)
}
}




const deleteCmtBtns = document.querySelectorAll(".delete-comment");
deleteCmtBtns.forEach((btn)=>{
  btn.addEventListener("click",()=>{

    deleteComment(btn.value, BASE_URL)
  })
})



}









window.addEventListener("load", fetchComments)









// add comment

const formHandeler = async (e)=>{
  e.preventDefault();
  const data = new FormData(commentForm);
let comment = data.get("comment").trim();

if(comment.length > 0){
  try{
const res = await fetch(`${BASE_URL}`,{
  headers: {
'Accept': 'application/json',
'Content-Type': 'application/json'
},
  method:"POST",
  body:JSON.stringify({comment, postId})
})
const {message} = await res.json()
console.log(message)

  errorMessage.innerHTML =""

  }catch(er){
    console.log(er.message)
    errorMessage.innerHTML = `${er.message}`
  }
}else{
  errorMessage.innerHTML = `<b> Comment field can not be empty </b>`
}
commentForm.reset()

location.reload()
}


 commentForm.addEventListener("submit", formHandeler)
</script>